# Generated by Django 2.1.1 on 2019-04-01 09:38

from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('contenttypes', '0002_remove_content_type_name'),
    ]

    operations = [
        migrations.CreateModel(
            name='Account',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('username', models.CharField(max_length=32, verbose_name='用户名')),
                ('passwd', models.CharField(max_length=32, verbose_name='密码')),
                ('brief', models.CharField(max_length=64, verbose_name='学员简介')),
                ('education', models.IntegerField(choices=[(0, '大专'), (1, '本科'), (2, '研究生'), (3, '博士'), (4, '硕士'), (5, '其他')], default=5, verbose_name='学历')),
                ('career', models.CharField(max_length=32, verbose_name='目前职业/最近一次从事职业')),
                ('balance', models.IntegerField(default=0, verbose_name='账户余额')),
            ],
            options={
                'verbose_name': '用户表',
                'verbose_name_plural': 'DB_Account',
                'db_table': 'DB_Account',
            },
        ),
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=32, verbose_name='课程分类名')),
            ],
            options={
                'verbose_name': '课程分类',
                'verbose_name_plural': 'DB_Category',
                'db_table': 'DB_Category',
            },
        ),
        migrations.CreateModel(
            name='Comment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('object_id', models.PositiveIntegerField(blank=True, null=True)),
                ('comment_date', models.DateField(auto_now_add=True)),
                ('content', models.CharField(max_length=1024, verbose_name='评论内容')),
                ('account', models.ForeignKey(on_delete='cascade', to='generic.Account', verbose_name='评论用户')),
                ('content_type', models.ForeignKey(blank=True, null=True, on_delete='cascade', to='contenttypes.ContentType')),
            ],
            options={
                'verbose_name': '评论',
                'verbose_name_plural': 'DB_Comment',
                'db_table': 'DB_Comment',
            },
        ),
        migrations.CreateModel(
            name='CommonQuestion',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('object_id', models.PositiveIntegerField()),
                ('question', models.CharField(max_length=64, verbose_name='问题')),
                ('answer', models.CharField(max_length=512, verbose_name='答案')),
                ('content_type', models.ForeignKey(on_delete='cascade', to='contenttypes.ContentType')),
            ],
            options={
                'verbose_name': '常见问题',
                'verbose_name_plural': 'DB_CommonQuestion',
                'db_table': 'DB_CommonQuestion',
            },
        ),
        migrations.CreateModel(
            name='Coupon',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=64, verbose_name='活动名')),
                ('brief', models.TextField(blank=True, max_length=128, null=True, verbose_name='优惠券介绍')),
                ('coupon_type', models.SmallIntegerField(choices=[(0, '通用券'), (1, '抵扣券'), (2, '满减券')], default=0)),
                ('count', models.IntegerField(verbose_name='优惠券张数，发放一次立即更新该字段')),
                ('equal_money', models.IntegerField(blank=True, default=0, null=True, verbose_name='优惠券等值货币')),
                ('off_percent', models.PositiveIntegerField(blank=True, default=100, help_text='仅在折扣券使用', null=True, verbose_name='折扣券百分比')),
                ('minimum_consume', models.FloatField(blank=True, default=0, help_text='仅在满减券使用', null=True, verbose_name='最低消费')),
                ('grant_begin_time', models.DateTimeField(verbose_name='活动领取开始时间')),
                ('grant_end_time', models.DateTimeField(verbose_name='活动领取结束时间')),
                ('start_time', models.DateTimeField(blank=True, null=True, verbose_name='优惠券有效期开始时间')),
                ('end_time', models.DateTimeField(blank=True, null=True, verbose_name='优惠券有效期结束时间')),
                ('period', models.PositiveIntegerField(blank=True, default=0, null=True, verbose_name='优惠券有效期(天)')),
                ('date', models.DateTimeField(auto_now_add=True, help_text='即用户实际领取优惠券生效的时间', verbose_name='生效时间')),
                ('object_id', models.PositiveIntegerField(help_text='有值代表专项优惠券，没有值代表通用券', verbose_name='绑定的课程对象')),
                ('content_type', models.ForeignKey(blank=True, null=True, on_delete='cascade', to='contenttypes.ContentType')),
            ],
            options={
                'verbose_name': '优惠券规则',
                'verbose_name_plural': 'DB_Coupon',
                'db_table': 'DB_Coupon',
            },
        ),
        migrations.CreateModel(
            name='CouponDetail',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('number', models.CharField(max_length=64, unique=True, verbose_name='优惠券流水记录')),
                ('status', models.SmallIntegerField(choices=[(0, '未使用'), (1, '已使用'), (2, '已过期')], default=0)),
                ('get_time', models.DateTimeField(verbose_name='用户领取时间')),
                ('use_time', models.DateTimeField(blank=True, null=True, verbose_name='用户使用时间')),
                ('account', models.ForeignKey(on_delete='cascade', to='generic.Account', verbose_name='优惠券拥有者')),
                ('coupon', models.ForeignKey(on_delete='cascade', to='generic.Coupon')),
            ],
            options={
                'verbose_name': '用户优惠券领取使用记录表',
                'verbose_name_plural': 'DB_CouponRecord',
                'db_table': 'DB_CouponRecord',
            },
        ),
        migrations.CreateModel(
            name='Course',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=32, verbose_name='课程标题')),
                ('course_img', models.ImageField(blank=True, null=True, upload_to='course/%Y-%m', verbose_name='课程图片')),
                ('status', models.SmallIntegerField(choices=[(0, '预售中'), (1, '开设中'), (2, '已下架')], verbose_name='课程状态')),
                ('difficult', models.SmallIntegerField(choices=[(0, '初级'), (1, '中级'), (2, '高级')], default=0, verbose_name='课程难度')),
                ('course_type', models.SmallIntegerField(choices=[(0, '付费'), (1, '免费'), (2, 'VIP专享'), (3, '学位课程')], verbose_name='课程类型')),
                ('release_date', models.DateField(blank=True, null=True, verbose_name='发布日期')),
                ('order', models.IntegerField(help_text='从上一个课程开始', verbose_name='课程顺序')),
                ('study_number', models.IntegerField(help_text='只要有人买，立即更新该字段', verbose_name='学习人数')),
                ('category', models.ForeignKey(on_delete='cascade', to='generic.Category')),
            ],
            options={
                'verbose_name': '课程',
                'verbose_name_plural': 'DB_Course',
                'db_table': 'DB_Course',
            },
        ),
        migrations.CreateModel(
            name='CourseChapter',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('chapter', models.SmallIntegerField(default=1, verbose_name='第几章')),
                ('title', models.CharField(max_length=32, verbose_name='章节名称')),
                ('course', models.ForeignKey(on_delete='cascade', related_name='course_chapters', to='generic.Course')),
            ],
            options={
                'verbose_name': '课程章节',
                'verbose_name_plural': 'DB_CourseChapter',
                'db_table': 'DB_CourseChapter',
            },
        ),
        migrations.CreateModel(
            name='CourseDetail',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('lesson', models.IntegerField(default=7, verbose_name='总课时')),
                ('slogan', models.CharField(blank=True, max_length=64, null=True, verbose_name='课程口号')),
                ('brief', models.CharField(max_length=128, verbose_name='简介')),
                ('why_study', models.CharField(max_length=1024, verbose_name='为什么学习')),
                ('point', models.CharField(max_length=512, verbose_name='课程安排，能学到的知识点')),
                ('harvest', models.CharField(max_length=1024, verbose_name='学完对我的职业生涯影响')),
                ('feature', models.CharField(max_length=512, verbose_name='课程特点')),
                ('prerequisite', models.TextField(max_length=1024, verbose_name='课程先修条件')),
                ('object_person', models.CharField(max_length=128, verbose_name='面向人群')),
                ('course', models.OneToOneField(on_delete='cascade', to='generic.Course')),
                ('recommend_course', models.ManyToManyField(related_name='recommend_by', to='generic.Course', verbose_name='推荐课程')),
            ],
            options={
                'verbose_name': '推荐课程',
                'verbose_name_plural': 'DB_CourseDetail',
                'db_table': 'DB_CourseDetail',
            },
        ),
        migrations.CreateModel(
            name='CourseLesson',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=32, verbose_name='课时名称')),
                ('order', models.SmallIntegerField(help_text='每三个隔开排序，方便以后更新课程插入', verbose_name='课时顺序')),
                ('course_lesson_type', models.SmallIntegerField(choices=[(0, '视频'), (1, '文档'), (2, '练习题')], default=2, verbose_name='课时类型')),
                ('free_trail', models.BooleanField(default=False, verbose_name='是否可试看')),
                ('lesson_link', models.CharField(blank=True, help_text='如果是文档，需要给链接', max_length=255, null=True, verbose_name='课程链接')),
                ('chapter', models.ForeignKey(on_delete='cascade', related_name='course_lesson', to='generic.CourseChapter', verbose_name='课程章节')),
            ],
            options={
                'verbose_name': '课时',
                'verbose_name_plural': 'DB_CourseLesson',
                'db_table': 'DB_CourseLesson',
            },
        ),
        migrations.CreateModel(
            name='CourseOutline',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=128, verbose_name='大纲名')),
                ('order', models.SmallIntegerField(default=1, verbose_name='大纲顺序')),
                ('content', models.TextField(max_length=2048, verbose_name='大纲内容')),
                ('course_detail', models.ForeignKey(on_delete='cascade', related_name='course_outline', to='generic.CourseDetail')),
            ],
            options={
                'verbose_name': '课程大纲',
                'verbose_name_plural': 'DB_CourseOutline',
                'db_table': 'DB_CourseOutline',
            },
        ),
        migrations.CreateModel(
            name='Degree',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=32, verbose_name='学位课程名')),
                ('aims', models.CharField(max_length=1024, verbose_name='培养目标')),
                ('core', models.CharField(max_length=1024, verbose_name='核心优势')),
                ('serving', models.CharField(max_length=1024, verbose_name='特色服务')),
            ],
            options={
                'verbose_name': '学位表',
                'verbose_name_plural': 'DB_Degree',
                'db_table': 'DB_Degree',
            },
        ),
        migrations.CreateModel(
            name='Order',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('payment_type', models.SmallIntegerField(choices=[(0, '支付宝'), (1, '微信'), (2, '余额支付'), (3, '优惠吗'), (4, '银行卡支付')], verbose_name='付款类型')),
                ('payment_number', models.IntegerField(blank=True, null=True, verbose_name='支付第三方流水号')),
                ('order_nubmer', models.CharField(blank=True, max_length=128, null=True, verbose_name='订单号')),
                ('payment_amount', models.FloatField(verbose_name='实付金额')),
                ('status', models.SmallIntegerField(choices=[(0, '交易成功'), (1, '待支付'), (2, '退费申请中'), (3, '已退费'), (4, '主动取消'), (5, '超时取消')], verbose_name='订单状态')),
                ('date', models.DateTimeField(auto_now_add=True, verbose_name='订单生成时间')),
                ('pay_time', models.DateTimeField(blank=True, null=True, verbose_name='付款时间')),
                ('cancel_time', models.DateTimeField(blank=True, null=True, verbose_name='订单取消时间')),
                ('account', models.ForeignKey(on_delete='cascade', to='generic.Account', verbose_name='下单用户')),
            ],
            options={
                'verbose_name': '订单表',
                'verbose_name_plural': 'DB_Order',
                'db_table': 'DB_Order',
            },
        ),
        migrations.CreateModel(
            name='OrderDetail',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('original_price', models.FloatField(verbose_name='课程原价')),
                ('price', models.FloatField(verbose_name='折后价格')),
                ('valid_period_display', models.CharField(max_length=32, verbose_name='有效期在订单页显示')),
                ('valid_period', models.PositiveIntegerField(verbose_name='课程有效期(days)')),
                ('memo', models.CharField(blank=True, max_length=255, null=True, verbose_name='订单交易备注')),
                ('object_id', models.PositiveIntegerField()),
                ('content_type', models.ForeignKey(on_delete='cascade', to='contenttypes.ContentType', verbose_name='关联普通课程或学位')),
                ('order', models.ForeignKey(on_delete='cascade', to='generic.Order')),
            ],
            options={
                'verbose_name': '订单详细',
                'verbose_name_plural': 'DB_OrderDetail',
                'db_table': 'DB_OrderDetail',
            },
        ),
        migrations.CreateModel(
            name='PricePolicy',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('object_id', models.PositiveIntegerField(verbose_name='课程对象')),
                ('valid_period', models.SmallIntegerField(choices=[(1, '1天'), (3, '3天'), (7, '1周'), (14, '2周'), (30, '1个月'), (60, '2个月'), (90, '3个月'), (120, '4个月'), (180, '6个月'), (210, '12个月'), (540, '18个月'), (720, '24个月'), (722, '24个月'), (723, '24个月')], verbose_name='课程有效期')),
                ('price', models.FloatField(verbose_name='课程价格')),
                ('content_type', models.ForeignKey(on_delete='cascade', to='contenttypes.ContentType')),
            ],
            options={
                'verbose_name': '价格策略表',
                'verbose_name_plural': 'DB_PricePolicy',
                'db_table': 'DB_PricePolicy',
            },
        ),
        migrations.CreateModel(
            name='Teacher',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('username', models.CharField(max_length=32, verbose_name='讲师姓名')),
                ('title', models.CharField(max_length=64, verbose_name='讲师头衔')),
                ('teacher_img', models.ImageField(blank=True, null=True, upload_to='teacher/', verbose_name='头像')),
                ('brief', models.CharField(max_length=128, verbose_name='讲师简介')),
            ],
            options={
                'verbose_name': '讲师表',
                'verbose_name_plural': 'DB_Teacher',
                'db_table': 'DB_Teacher',
            },
        ),
        migrations.CreateModel(
            name='TradeRecord',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('amount', models.IntegerField(verbose_name='交易金额')),
                ('balance', models.IntegerField(verbose_name='账户余额')),
                ('transaction_type', models.SmallIntegerField(choices=[(0, '收入'), (1, '支出'), (2, '退款'), (3, '提现')], verbose_name='交易类型')),
                ('transaction_number', models.CharField(max_length=128, unique=True, verbose_name='流水号')),
                ('date', models.DateTimeField(auto_now_add=True, verbose_name='交易时间')),
                ('memo', models.CharField(blank=True, max_length=128, null=True, verbose_name='交易备注')),
                ('account', models.ForeignKey(on_delete='cascade', to='generic.Account', verbose_name='用户')),
            ],
            options={
                'verbose_name': '余额交易记录',
                'verbose_name_plural': 'DB_TradeRecord',
                'db_table': 'DB_TradeRecord',
            },
        ),
        migrations.AddField(
            model_name='degree',
            name='price',
            field=models.ForeignKey(on_delete='cascade', to='generic.PricePolicy', verbose_name='价格'),
        ),
        migrations.AddField(
            model_name='coursedetail',
            name='teacher',
            field=models.ManyToManyField(to='generic.Teacher'),
        ),
        migrations.AddField(
            model_name='course',
            name='degree_course',
            field=models.ForeignKey(blank=True, help_text='如果是学位课程，必须关联学位表', null=True, on_delete='cascade', to='generic.Degree'),
        ),
        migrations.AddField(
            model_name='coupondetail',
            name='order',
            field=models.ForeignKey(blank=True, help_text='一个订单可以有多个优惠券使用记录', null=True, on_delete='cascade', to='generic.Order', verbose_name='关联订单'),
        ),
        migrations.AlterUniqueTogether(
            name='courseoutline',
            unique_together={('title', 'course_detail')},
        ),
        migrations.AlterUniqueTogether(
            name='courselesson',
            unique_together={('chapter', 'lesson_link')},
        ),
        migrations.AlterUniqueTogether(
            name='coursechapter',
            unique_together={('chapter', 'course')},
        ),
        migrations.AlterUniqueTogether(
            name='commonquestion',
            unique_together={('content_type', 'object_id', 'question')},
        ),
    ]
