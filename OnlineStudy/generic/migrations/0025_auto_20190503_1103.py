# Generated by Django 2.1.1 on 2019-05-03 03:03

from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('generic', '0024_traderecord_order'),
    ]

    operations = [
        migrations.CreateModel(
            name='Admins',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'verbose_name': '管理组表',
                'verbose_name_plural': 'DB_Admins',
                'db_table': 'DB_Admins',
            },
        ),
        migrations.CreateModel(
            name='ConsultRecord',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('note', models.TextField(verbose_name='跟进内容')),
                ('date', models.DateField(auto_now_add=True, verbose_name='跟进日期')),
            ],
            options={
                'verbose_name': '导师跟进记录表',
                'verbose_name_plural': 'DB_ConsultRecord',
                'db_table': 'DB_ConsultRecord',
            },
        ),
        migrations.CreateModel(
            name='Homework',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('content', models.TextField(blank=True, null=True, verbose_name='作业内容')),
                ('courses', models.ForeignKey(on_delete='cascade', to='generic.Course', verbose_name='课程')),
            ],
            options={
                'verbose_name': '作业情况',
                'verbose_name_plural': 'DB_Homework',
                'db_table': 'DB_Homework',
            },
        ),
        migrations.CreateModel(
            name='HomeworkDetail',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.IntegerField(choices=[(1, '作业未发布'), (2, '学生未提交'), (3, '讲师未批改'), (4, '讲师已批改-合格'), (5, '讲师已批改-不合格')], default=2)),
                ('file', models.FileField(blank=True, null=True, upload_to='homework/%Y-%m-%d/', verbose_name='作业文件')),
                ('critic', models.TextField(blank=True, null=True, verbose_name='作业批语')),
                ('homework', models.ForeignKey(on_delete='cascade', to='generic.Homework', verbose_name='作业')),
            ],
            options={
                'verbose_name': '作业详情',
                'verbose_name_plural': 'DB_HomeworkDetail',
                'db_table': 'DB_HomeworkDetail',
            },
        ),
        migrations.CreateModel(
            name='PaymentRecord',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('pay_type', models.IntegerField(choices=[(1, '报名费'), (2, '学费'), (3, '退学'), (4, '其他')], default=1, verbose_name='费用类型')),
                ('paid_fee', models.IntegerField(default=0, verbose_name='金额')),
                ('apply_date', models.DateTimeField(auto_now_add=True, verbose_name='申请日期')),
                ('confirm_status', models.IntegerField(choices=[(1, '申请中'), (2, '已确认'), (3, '已驳回')], default=1, verbose_name='确认状态')),
                ('confirm_date', models.DateTimeField(blank=True, null=True, verbose_name='确认日期')),
                ('note', models.TextField(blank=True, null=True, verbose_name='备注')),
            ],
            options={
                'verbose_name': '缴费申请表',
                'verbose_name_plural': 'DB_PaymentRecord',
                'db_table': 'DB_PaymentRecord',
            },
        ),
        migrations.CreateModel(
            name='ScoreRecord',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('content', models.TextField(verbose_name='理由')),
                ('score', models.IntegerField(help_text='违纪扣分写负值，表现邮寄加分写正值', verbose_name='分值')),
            ],
            options={
                'verbose_name': '积分记录',
                'verbose_name_plural': 'DB_ScoreRecord',
                'db_table': 'DB_ScoreRecord',
            },
        ),
        migrations.CreateModel(
            name='Student',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('qq', models.CharField(blank=True, max_length=32, null=True, verbose_name='QQ号')),
                ('mobile', models.CharField(blank=True, max_length=32, null=True, verbose_name='手机号')),
                ('emergency_contract', models.CharField(blank=True, max_length=32, null=True, verbose_name='紧急联系人电话')),
                ('student_status', models.IntegerField(choices=[(1, '申请中'), (2, '在学'), (3, '毕业'), (4, '退学'), (5, '非学员')], default=1, verbose_name='学员状态')),
                ('score', models.IntegerField(default=100, verbose_name='积分')),
                ('memo', models.TextField(blank=True, max_length=255, null=True, verbose_name='备注')),
            ],
        ),
        migrations.CreateModel(
            name='StudyQuestion',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('question', models.TextField(verbose_name='提问内容')),
                ('answer', models.TextField(blank=True, null=True, verbose_name='回答内容')),
            ],
            options={
                'verbose_name': '问题表',
                'verbose_name_plural': 'DB_StudyQuestion',
                'db_table': 'DB_StudyQuestion',
            },
        ),
        migrations.CreateModel(
            name='Tutor',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'verbose_name': '导师表',
                'verbose_name_plural': 'DB_Tutor',
                'db_table': 'DB_Tutor',
            },
        ),
        migrations.AddField(
            model_name='account',
            name='level',
            field=models.IntegerField(choices=[(0, '管理员'), (1, '导师'), (2, '学员')], default=2, verbose_name='用户等级'),
        ),
        migrations.AddField(
            model_name='tutor',
            name='account',
            field=models.OneToOneField(on_delete='cascade', to='generic.Account', verbose_name='导师信息'),
        ),
        migrations.AddField(
            model_name='studyquestion',
            name='student',
            field=models.ForeignKey(limit_choices_to={'level': 2}, on_delete='cascade', to='generic.Account', verbose_name='提问学生'),
        ),
        migrations.AddField(
            model_name='studyquestion',
            name='tutor',
            field=models.ForeignKey(limit_choices_to={'account__level': 1}, on_delete='cascade', to='generic.Tutor', verbose_name='导师'),
        ),
        migrations.AddField(
            model_name='student',
            name='account',
            field=models.OneToOneField(on_delete='cascade', to='generic.Account', verbose_name='学员信息'),
        ),
        migrations.AddField(
            model_name='student',
            name='courses',
            field=models.ManyToManyField(blank=True, to='generic.Course', verbose_name='已买课程'),
        ),
        migrations.AddField(
            model_name='student',
            name='tutor',
            field=models.ForeignKey(blank=True, help_text='这个字段由管理员填写分配', null=True, on_delete='cascade', to='generic.Tutor', verbose_name='导师'),
        ),
        migrations.AddField(
            model_name='scorerecord',
            name='student',
            field=models.ForeignKey(limit_choices_to={'level': 2}, on_delete='cascade', to='generic.Account', verbose_name='学生'),
        ),
        migrations.AddField(
            model_name='scorerecord',
            name='user',
            field=models.ForeignKey(limit_choices_to={'account__level': 1}, on_delete='cascade', to='generic.Tutor', verbose_name='执行人'),
        ),
        migrations.AddField(
            model_name='paymentrecord',
            name='account',
            field=models.ForeignKey(on_delete='cascade', to='generic.Account', verbose_name='客户'),
        ),
        migrations.AddField(
            model_name='paymentrecord',
            name='confirm_user',
            field=models.ForeignKey(blank=True, null=True, on_delete='cascade', related_name='confirms', to='generic.Admins', verbose_name='审批人'),
        ),
        migrations.AddField(
            model_name='paymentrecord',
            name='coures',
            field=models.ForeignKey(on_delete='cascade', to='generic.Course', verbose_name='申请课程'),
        ),
        migrations.AddField(
            model_name='homeworkdetail',
            name='student',
            field=models.ManyToManyField(blank=True, limit_choices_to={'level': 2}, to='generic.Account', verbose_name='学生'),
        ),
        migrations.AddField(
            model_name='homework',
            name='teacher',
            field=models.ForeignKey(limit_choices_to={'account__level': 1}, on_delete='cascade', to='generic.Tutor', verbose_name='导师'),
        ),
        migrations.AddField(
            model_name='consultrecord',
            name='consultant',
            field=models.ForeignKey(limit_choices_to={'account__level': 1}, on_delete='cascade', to='generic.Tutor', verbose_name='跟进人'),
        ),
        migrations.AddField(
            model_name='consultrecord',
            name='student',
            field=models.ForeignKey(limit_choices_to={'level': 2}, on_delete='cascade', to='generic.Account', verbose_name='所跟进学生'),
        ),
        migrations.AddField(
            model_name='admins',
            name='account',
            field=models.OneToOneField(on_delete='cascade', to='generic.Account', verbose_name='管理组'),
        ),
    ]
